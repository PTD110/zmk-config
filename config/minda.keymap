/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    macros {
        ctrl_win_left: ctrl_win_left {
            label = "ctrl+windows+left";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_tap>,
                <&kp LEFT>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
        };

        ctrl_win_right: ctrl_win_right {
            label = "ctrl+windows+right";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LGUI &kp LCTRL>,
                <&macro_tap>,
                <&kp RIGHT>,
                <&macro_release>,
                <&kp LGUI &kp LCTRL>;
        };

        CtrlShiftEsc: CtrlShiftEsc {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&macro_tap>, <&kp LS(LC(ESC))>;
        };
    };

    behaviors {
        lft_wnlft: lft_wnlft {
            compatible = "zmk,behavior-mod-morph";
            label = "left_or_windowsLeft";
            #binding-cells = <0>;
            bindings = <&kp LEFT>, <&ctrl_win_left>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        rht_wnrht: rht_wnrht {
            compatible = "zmk,behavior-mod-morph";
            label = "right_or_windowsRight";
            #binding-cells = <0>;
            bindings = <&kp RIGHT>, <&ctrl_win_right>;

            mods = <(MOD_LALT|MOD_RALT)>;
        };

        shift_l_parenth: shift_l_parenth {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_L_PARENTH";
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_RSFT)>;
        };

        shift_r_parenth: shift_r_parenth {
            compatible = "zmk,behavior-mod-morph";
            label = "SHIFT_R_PARENTH";
            bindings = <&kp RIGHT_SHIFT>, <&kp KP_RIGHT_PARENTHESIS>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        combo_double_bracket {
            bindings = <&CtrlShiftEsc>;
            key-positions = <38 39>;
            layers = <1>;
        };

        combo_switch_app_fwd {
            bindings = <&kp LA(TAB)>;
            key-positions = <36 37>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ---------------------------------------------------------------------------------------------------------------------------------
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                                          |  Y   |  U    |  I    |  O   |   P   |   \  |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                                          |  H   |  J    |  K    |  L   |   ;   |   '  |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   | L SHIFT | L SHIFT |  | L SHIFT | L SHIFT |  N   |  M    |  ,    |  .   |   /   | CTRL |
            //                     | GUI  | DEL  | RET  |  SPACE  |   ESC   |  |   RET   |  SPACE  | TAB  | BSPC  | R-ALT |

            bindings = <
&kp GRAVE         &kp Q  &kp W      &kp E      &kp R        &kp T                              &kp Y            &kp U     &kp I      &kp O     &kp P     &kp BSLH
&kp TAB           &kp A  &kp S      &kp D      &kp F        &kp G                              &kp H            &kp J     &kp K      &kp L     &kp SEMI  &kp SQT
&shift_l_parenth  &kp Z  &kp X      &kp C      &kp V        &kp B                              &kp N            &kp M     &kp COMMA  &kp DOT   &kp FSLH  &shift_r_parenth
                         &kp MINUS  &kp EQUAL                                                                             &kp LBKT   &kp RBKT
                                               &key_repeat  &lt 1 SPACE  &kp LCTRL  &kp RCTRL  &lt 2 ENTER      &kp BSPC
                                               &kp LGUI     &kp RALT                           &mt LALT ESCAPE  &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        L1 {
            bindings = <
&kp PAGE_UP    &kp NUMBER_1  &kp NUMBER_2      &kp N3        &kp N4           &kp N5                              &kp N6      &kp N7    &kp N8   &kp N9      &kp N0      &kp HOME
&kp PAGE_DOWN  &kp LSHFT     &kp C_PLAY_PAUSE  &kp C_VOL_DN  &kp C_VOLUME_UP  &kp K_MUTE                          &lft_wnlft  &kp DOWN  &kp UP   &rht_wnrht  &kp RSHIFT  &kp END
&trans         &kp F1        &kp F2            &kp F3        &kp F4           &kp F5                              &kp F6      &kp F7    &kp F8   &kp F9      &kp F10     &trans
                             &trans            &trans                                                                                   &kp F11  &kp F12
                                                             &bootloader      &trans        &kp CAPSLOCK  &trans  &kp RALT    &trans
                                                             &sys_reset       &out OUT_TOG                        &kp LALT    &kp RGUI
            >;
        };

        L2 {
            bindings = <
&kp C_BRIGHTNESS_DEC  &kp C_BRIGHTNESS_INC  &kp K_WWW     &kp C_AL_FILE_BROWSER  &kp K_CALC    &kp C_AL_IM                      &kp LS(C_PLAY_PAUSE)  &kp C_VOL_DN  &kp C_VOL_UP  &kp K_MUTE    &kp K_LOCK  &kp C_SLEEP_MODE
&kp CAPS              &kp LSHFT             &kp LCTRL     &kp LEFT_ALT           &kp LGUI      &kp PRINTSCREEN                  &kp LEFT              &kp DOWN      &kp UP        &kp RIGHT     &kp INSERT  &kp ENTER
&ext_power EP_TOG     &out OUT_TOG          &bt BT_SEL 0  &bt BT_SEL 1           &bt BT_SEL 2  &bt BT_CLR                       &kp HOME              &kp PG_DN     &kp PG_UP     &kp END       &none       &trans
                                            &trans        &trans                                                                                                    &kp C_BRI_DN  &kp C_BRI_UP
                                                                                 &trans        &trans           &trans  &trans  &trans                &bootloader
                                                                                 &trans        &trans                           &trans                &sys_reset
            >;
        };
    };
};
